/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&caps_word { continue-list = <UNDERSCORE BACKSPACE DELETE MINUS N1 N2 N3 N4 N5 N6 N7 N8 N9 N0 KP_N1 KP_N2 KP_N3 KP_N4 KP_N5 KP_N6 KP_N7 KP_N8 KP_N9 KP_N0>; };

&sl {
};

&sk { release-after-ms = <1500>; };

/ {
    behaviors {
        magic_shift_layer: magic_shift_layer {
            compatible = "zmk,behavior-tap-dance";
            label = "MAGIC_SHIFT_LAYER";
            #binding-cells = <0>;
            bindings = <&mo 3>, <&none>, <&none>, <&to 4>;
        };

        layer_mo_sl: layer_mo_sl {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_MO_SL";
            bindings = <&mo>, <&sl>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        mo_tog_tapdance_numpad: mo_tog_tapdance_numpad {
            compatible = "zmk,behavior-tap-dance";
            label = "MO_TOG_TAPDANCE_NUMPAD";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&tog 1>;
        };

        sk_shift: sk_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "SK_SHIFT";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT>, <&caps_word>;
        };

        stickyshift_tap_hold: stickyshift_tap_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "STICKYSHIFT_TAP_HOLD";
            bindings = <&kp>, <&sk_shift>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
        };

        sl_toggle_symbols: sl_toggle_symbols {
            compatible = "zmk,behavior-tap-dance";
            label = "SL_TOGGLE_SYMBOLS";
            #binding-cells = <0>;
            bindings = <&sl 2>, <&to 2>;
        };

        sl_tap_hold_symbols: sl_tap_hold_symbols {
            compatible = "zmk,behavior-hold-tap";
            label = "SL_TAP_HOLD_SYMBOLS";
            bindings = <&mo>, <&sl_toggle_symbols>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
        };

        auto_tab: auto_tab {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_TAB";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_alt {
            bindings = <&sk LS(LC(LEFT_ALT))>;
            key-positions = <26 27>;
        };

        combo_lgui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <36 37>;
        };

        combo_parens_pair {
            bindings = <&parens_pair>;
            key-positions = <7 10>;
        };

        combo_brackets_pair {
            bindings = <&brackets_pair>;
            key-positions = <31 34>;
        };

        combo_braces_pair {
            bindings = <&braces_pair>;
            key-positions = <1 4>;
        };

        combo_lt_gt_pair {
            bindings = <&lt_gt_pair>;
            key-positions = <25 28>;
        };
    };

    macros {
        parens_pair: parens_pair {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT_ARROW>;
            label = "PARENS_PAIR";
        };

        brackets_pair: brackets_pair {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT_ARROW>;
            label = "BRACKETS_PAIR";
        };

        braces_pair: braces_pair {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT_ARROW>;
            label = "BRACES_PAIR";
        };

        lt_gt_pair: lt_gt_pair {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp GREATER_THAN &kp LEFT_ARROW>;
            label = "LT_GT_PAIR";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&auto_tab LC(LA(TAB)) TAB  &kp Q  &kp W  &kp E                    &kp R      &kp T                                 &kp Y          &kp U      &kp I                     &kp O    &kp P     &kp MINUS
&mt LCTRL ESCAPE           &kp A  &kp S  &kp D                    &kp F      &kp G                                 &kp H          &kp J      &kp K                     &kp L    &kp SEMI  &kp SQT
&kp LSHFT                  &kp Z  &kp X  &kp C                    &kp V      &kp B                                 &kp N          &kp M      &kp COMMA                 &kp DOT  &kp FSLH  &magic_shift_layer
                                         &mo_tog_tapdance_numpad  &kp ENTER  &stickyshift_tap_hold LEFT_SHIFT 0    &kp BACKSPACE  &kp SPACE  &sl_tap_hold_symbols 2 0
            >;
        };

        layer_Numpad {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp N1  &kp N2  &kp N3  &kp N4     &kp N5    &kp N6         &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp N0           &kp KP_SUBTRACT
&trans   &trans  &trans  &trans  &trans     &trans    &none          &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MULTIPLY  &kp KP_PLUS
&trans   &trans  &trans  &trans  &trans     &trans    &trans         &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &none            &kp KP_ENTER
                         &to 0   &kp ENTER  &none     &kp BACKSPACE  &kp KP_NUMBER_0  &kp KP_DOT
            >;
        };

        layer_Symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp LEFT_BRACE  &kp AT     &kp HASH       &kp RIGHT_BRACE   &kp GRAVE      &kp EXCL        &kp LEFT_PARENTHESIS  &kp COLON     &kp SEMI         &kp RIGHT_PARENTHESIS  &none
&none  &kp CARET       &kp EQUAL  &kp UNDER      &kp DOLLAR        &kp STAR       &kp LEFT_ARROW  &kp DOWN_ARROW        &kp UP_ARROW  &kp RIGHT_ARROW  &kp TILDE              &none
&none  &kp LESS_THAN   &kp PIPE   &kp MINUS      &kp GREATER_THAN  &kp SLASH      &kp PERCENT     &kp LEFT_BRACKET      &kp PLUS      &kp AMPS         &kp RIGHT_BRACKET      &none
                                  &kp BACKSLASH  &kp COLON         &kp PERCENT    &trans          &trans                &to 0
            >;
        };

        layer_Shift {
            bindings = <
&kp GRAVE  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp STAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
&trans     &trans    &trans  &trans    &trans      &trans         &trans     &trans         &trans    &trans                &trans                 &trans
&trans     &trans    &trans  &trans    &trans      &trans         &trans     &trans         &trans    &trans                &trans                 &trans
                             &trans    &trans      &trans         &trans     &trans         &trans
            >;
        };

        layer_Magic {
            bindings = <
&bt BT_CLR  &none         &none         &none         &none         &none           &none  &none  &none  &none  &none  &none
&none       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &none  &none  &none  &none  &none
&none       &none         &trans        &none         &none         &none           &none  &none  &none  &none  &none  &to 0
                                        &none         &none         &none           &none  &none  &none
            >;
        };
    };
};
